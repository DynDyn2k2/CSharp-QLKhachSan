<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gunatxtDT.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnReset.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>